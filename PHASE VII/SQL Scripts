Create Audit Table
------------------
CREATE TABLE Vote_Audit (
    Audit_ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Voter_ID     INT,
    Candidate_ID INT,
    Election_ID  INT,
    Vote_Time    TIMESTAMP,
    Action_By    VARCHAR2(50)
);

Trigger to Log Vote to Audit Table
----------------------------------
CREATE OR REPLACE TRIGGER trg_vote_audit
AFTER INSERT ON Votes
FOR EACH ROW
BEGIN
    INSERT INTO Vote_Audit (Voter_ID, Candidate_ID, Election_ID, Vote_Time, Action_By)
    VALUES (:NEW.Voter_ID, :NEW.Candidate_ID, :NEW.Election_ID, :NEW.Timestamp, USER);
END;
/

Trigger to Prevent Voting After Deadline
----------------------------------------
CREATE OR REPLACE TRIGGER trg_prevent_late_vote
BEFORE INSERT ON Votes
FOR EACH ROW
DECLARE
    v_election_date DATE;
BEGIN
    SELECT Election_Date INTO v_election_date
    FROM Elections
    WHERE Election_ID = :NEW.Election_ID;

    IF SYSDATE > v_election_date THEN
        RAISE_APPLICATION_ERROR(-20010, 'Voting period has ended for this election.');
    END IF;
END;
/

Trigger to Prevent Double Voting 
--------------------------------
CREATE OR REPLACE TRIGGER trg_prevent_duplicate_vote
BEFORE INSERT ON Votes
FOR EACH ROW
DECLARE
    v_count NUMBER;
BEGIN
    SELECT COUNT(*) INTO v_count
    FROM Votes
    WHERE Voter_ID = :NEW.Voter_ID
      AND Election_ID = :NEW.Election_ID;

    IF v_count > 0 THEN
        RAISE_APPLICATION_ERROR(-20011, 'You have already voted in this election.');
    END IF;
END;
/

Test Triggers
-------------
INSERT INTO Votes (Vote_ID, Voter_ID, Candidate_ID, Election_ID, Timestamp)
VALUES (Votes_seq.NEXTVAL, 11, 102, 11, SYSTIMESTAMP);

-- Check audit
SELECT * FROM Vote_Audit;
